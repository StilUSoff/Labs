#include "stm32f2xx.h"                  // Device header 
#include "core_cm3.h" 
 
void delay () 
{  
unsigned long i; 
i=0;
for(i=0; i<2000000; i++){} 
} 
 
void SysTick_Handler(void) //обработчик прерываний кот работает все время по таймеру (например каждые 5 сек заходит в прерывание)
{ 
GPIOG->ODR &= ~(1ul<<7); 
GPIOG->ODR &= ~(1ul<<6); 
} 
 
 
void EXTI0_IRQHandler(void) 
{  
 delay(); 
 SCB->SCR^=SCB_SCR_SLEEPONEXIT_Msk; 
  
 EXTI->FTSR^=EXTI_FTSR_TR0; // обработчик внешних прерываний (по нажатию кнопки)
 EXTI->RTSR^=EXTI_RTSR_TR0; 
  
 EXTI->PR|=EXTI_PR_PR0; //регстр ожидания, записыва я 1, мы сбрасываем бит
} 
 
void EXTI15_10_IRQHandler(void) 
 
{  
 GPIOH->ODR|=1ul<<7; 
  delay (); 
 GPIOH->ODR &= ~1ul<<7; 
  
 EXTI->PR|=EXTI_PR_PR15; //регстр ожидания, записыва я 1, мы сбрасываем бит
} 
 
int main () 
 
{ 
 RCC->AHB1ENR |= 1ul<<6; // Enable port G clocking 
 RCC->AHB1ENR |= 1ul<<7; // Enable port H clocking 
 RCC->APB2ENR|= 1ul<<14; //SYSCFGEN 
 
 GPIOG->MODER = (GPIOG->MODER & ~(1ul<<13)) | 1ul<<12;//PG6 
 GPIOG->MODER = (GPIOG->MODER & ~(1ul<<15)) | 1ul<<14;//PG7 
 GPIOG->MODER = (GPIOG->MODER & ~(1ul<<17)) | 1ul<<16;//PG8  
 GPIOH->MODER = (GPIOH->MODER & ~(1ul<<15)) | 1ul<<14;//PH7 
 
 GPIOA->MODER = (GPIOA->MODER & ~(1ul<<1)) & ~(1ul);//PA0 
 
 EXTI->IMR|=EXTI_IMR_MR0|EXTI_IMR_MR15; //разрешили прерывания в соответствующем канале (прерывание включено)
 
 EXTI->RTSR|= EXTI_RTSR_TR0; //Rise Signal 
 EXTI->FTSR|= EXTI_FTSR_TR15; //Fall Signal 
 
 SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI0_PA; 
 SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI15_PG; 
  
 NVIC_SetPriority(6,5); 
 NVIC_SetPriority(40,6); 
  
 NVIC_EnableIRQ(6); 
 NVIC_EnableIRQ(40); 
 
 SysTick_Config(4000000); //частота вызова таймера

for (;;) 
 
{ 
 delay (); 
GPIOG->ODR|=1ul<<6; 
  delay (); 
GPIOG->ODR|=1ul<<7; 
 delay (); 
  
 
GPIOG->ODR |= 1ul<<8; 
delay (); 
GPIOG->ODR &= ~1ul<<8;  
} 

 
} 
}